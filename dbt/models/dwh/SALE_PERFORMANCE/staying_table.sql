{{
  config(
    materialized='table'
  )
}}

WITH
O AS( -- Build OTB raw DATA FOR Report
  SELECT BUSINESS_DATE,RESORT,CONSIDERED_DATE DATE,SERVER,
    CASE
      WHEN RCC.COMMISSION = 'Y' AND AGENT_ID IS NOT NULL AND COMPANY_ID IS NOT NULL THEN AGENT_ID
      WHEN RCC.COMMISSION = 'N' AND AGENT_ID IS NOT NULL AND COMPANY_ID IS NOT NULL THEN COMPANY_ID
      WHEN AGENT_ID IS NOT NULL THEN AGENT_ID
    ELSE COMPANY_ID
  END PROFILE_ID,
    IFNULL (MS.MARKET_GROUP,'11. Khách khác - Others') MARKET_GROUP,
    SUM (STAY_ROOMS) RNS,
    SUM ( TOTAL_REVENUE) TOTAL_REV
  FROM
    `vp-data-mart-prod-c827.REVENUE_MART.RESERVATION_OTB_TODAY`
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.MARKET_SEGMENT` MS
  USING (MARKET_CODE)
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.RATE_CODE_COMMISSION` RCC
  USING (RATE_CODE)
  LEFT JOIN (
    SELECT
      DISTINCT PROPERTY_CODE RESORT,
      OPERA_SERVER SERVER
    FROM
      `vp-dwh-prod-c827.MAPPING.PROPERTY`) MP
  USING (RESORT)
  GROUP BY 1,2,3,4,5,6),

  
A AS ( -- Build ACT raw DATA FOR Report
  SELECT
    DATE_ADD (RESERVATION_DATE, INTERVAL 1 DAY) BUSINESS_DATE,
    RESORT,
    RESERVATION_DATE DATE,
    SERVER,
    CASE
      WHEN RCC.COMMISSION = 'Y' AND AGENT_ID IS NOT NULL AND COMPANY_ID IS NOT NULL THEN AGENT_ID
      WHEN RCC.COMMISSION = 'N' AND AGENT_ID IS NOT NULL AND COMPANY_ID IS NOT NULL THEN COMPANY_ID
      WHEN AGENT_ID IS NOT NULL THEN AGENT_ID
    ELSE COMPANY_ID
  END PROFILE_ID,
    IFNULL (MARKET_GROUP,'11. Khách khác - Others') MARKET_GROUP,
    SUM (STAY_ROOMS) RNS,
    0 TOTAL_REV
  FROM
    `vp-data-mart-prod-c827.REVENUE_MART.RESERVATION_STAT_SUMMARY`
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.RATE_CODE_COMMISSION` RCC
  USING (RATE_CODE)
  LEFT JOIN (
    SELECT
      DISTINCT PROPERTY_CODE RESORT,
      OPERA_SERVER SERVER
    FROM
      `vp-dwh-prod-c827.MAPPING.PROPERTY`) MP
  USING (RESORT)
  WHERE
    ROOM_CLASS_GROUP IS NOT NULL
  GROUP BY
    1,2,3,4,5,6
  UNION ALL -- Connect ACT Doanh thu vs RNs
  SELECT
    DATE_ADD(TRX_DATE, INTERVAL 1 DAY),
    RESORT,
    TRX_DATE DATE,
    SERVER,
    CASE
      WHEN RCC.COMMISSION = 'Y' AND AGENT_ID IS NOT NULL AND COMPANY_ID IS NOT NULL THEN AGENT_ID
      WHEN RCC.COMMISSION = 'N' AND AGENT_ID IS NOT NULL AND COMPANY_ID IS NOT NULL THEN COMPANY_ID
      WHEN AGENT_ID IS NOT NULL THEN AGENT_ID
    ELSE COMPANY_ID
  END
    PROFILE_ID,
    IFNULL (MS.MARKET_GROUP,'11. Khách khác - Others') MARKET_GROUP,
    0,
    CASE
      --WHEN REV_CLASS IS NOT NULL AND REV_CLASS NOT IN ('NR', 'RC99') AND REV_CLASS_DESC not in ('08.Golf') AND SUB_REV_CLASS_DESC NOT LIKE "%Onsite%" THEN SUM (NET_AMOUNT)
      WHEN REV_CLASS IS NOT NULL AND REV_CLASS_DESC not in ("00.Non revenue","","99.Other","08.Golf") 
      AND SUB_REV_CLASS not in ("RC0205","RC0206","RC0207","RC0208","RC0902","RC0502","RC0702","RC1002","RC0302","RC0402") THEN SUM (NET_AMOUNT)
  END TOTAL_REV
  FROM
    `vp-data-mart-prod-c827.REVENUE_MART.FINANCIAL_TRANSACTIONS` FTX
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.RATE_CODE_COMMISSION` RCC
  USING (RATE_CODE)
  LEFT JOIN (
    SELECT
      DISTINCT PROPERTY_CODE RESORT,
      OPERA_SERVER SERVER
    FROM
      `vp-dwh-prod-c827.MAPPING.PROPERTY`) MP
  USING (RESORT)
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.MARKET_SEGMENT` MS
  USING (MARKET_CODE)
  WHERE
    TRX_DATE < CURRENT_DATE
  GROUP BY
    1,2,3,4,5,6,
    REV_CLASS,
    REV_CLASS_DESC,
    SUB_REV_CLASS),

OTB AS ( -- OTB map Account & SIC
  SELECT
    O.*,
    CASE
      WHEN RNS = 0 AND TOTAL_REV = 0 THEN 'N'
    ELSE 'Y'
  END CHOOSE,
    IFNULL (PS.MASTER_ACCOUNT,'NO PROFILE') ACCOUNT,
    IFNULL (IFNULL (PS1.SG1_MG,PS.SG1),'NO SIC') SG1,
    IFNULL (IFNULL (PS1.SIC1_MG,PS.SIC1),'NO-SIC') SIC1,
    IFNULL (IFNULL (PS1.R1_MG,PS.R1),1) R1,
    IFNULL (PS1.SG2_MG,PS.SG2) SG2,
    IFNULL (PS1.SIC2_MG,PS.SIC2) SIC2,
    IFNULL (PS1.R2_MG,PS.R2) R2,
  FROM O
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.REVENUE_PROFILE_SIC` PS
  USING (SERVER, PROFILE_ID)
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.REVENUE_PROFILE_SIC` PS1
  ON
    PS1.SERVER = O.SERVER
    AND PS1.PROFILE_ID = O.PROFILE_ID
    AND PS1.SEGMENT = O.MARKET_GROUP),
  ACT AS ( -- ACT map Account & SIC
  SELECT
    A.*,
    CASE
      WHEN RNS = 0 AND TOTAL_REV = 0 THEN 'N'
    ELSE 'Y'
  END CHOOSE,
    IFNULL (PS.MASTER_ACCOUNT,'NO PROFILE') ACCOUNT,
    IFNULL (IFNULL (PS1.SG1_MG,PS.SG1),'NO SIC') SG1,
    IFNULL (IFNULL (PS1.SIC1_MG,PS.SIC1),'NO-SIC') SIC1,
    IFNULL (IFNULL (PS1.R1_MG,PS.R1),1) R1,
    IFNULL (PS1.SG2_MG,PS.SG2) SG2,
    IFNULL (PS1.SIC2_MG,PS.SIC2) SIC2,
    IFNULL (PS1.R2_MG,PS.R2) R2,
  FROM A
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.REVENUE_PROFILE_SIC` PS
  USING (SERVER,PROFILE_ID)
  LEFT JOIN `vp-dwh-prod-c827.MAPPING.REVENUE_PROFILE_SIC` PS1
  ON
    PS1.SERVER = A.SERVER
    AND PS1.PROFILE_ID = A.PROFILE_ID
    AND PS1.SEGMENT = A.MARKET_GROUP),


SIC_O AS ( -- PIVOT SIC,Account - OTB
  SELECT
    BUSINESS_DATE,
    RESORT,
    MARKET_GROUP,
    DATE,
    ACCOUNT,
    SG1 SALE_GROUP,
    SIC1 SIC,
    (RNS * R1) RNS,
    (TOTAL_REV * R1) TOTAL_REV
  FROM OTB
  WHERE
    CHOOSE = 'Y'
  UNION ALL
  SELECT
    BUSINESS_DATE,
    RESORT,
    MARKET_GROUP,
    DATE,
    ACCOUNT,
    SG2,
    SIC2,
    (RNS * R2) RNS,
    (TOTAL_REV * R2) TOTAL_REV
  FROM OTB
  WHERE
    SG2 IS NOT NULL
    AND CHOOSE = 'Y'),
  SIC_A AS ( -- PIVOT SIC,Account - ACT
  SELECT
    BUSINESS_DATE,
    RESORT,
    MARKET_GROUP,
    DATE,
    ACCOUNT,
    SG1 SALE_GROUP,
    SIC1 SIC,
    (RNS * R1) RNS,
    (TOTAL_REV * R1) TOTAL_REV
  FROM ACT
  WHERE
    CHOOSE = 'Y'
  UNION ALL
  SELECT
    BUSINESS_DATE,
    RESORT,
    MARKET_GROUP,
    DATE,
    ACCOUNT,
    SG2,
    SIC2,
    (RNS * R2) RNS,
    (TOTAL_REV * R2) TOTAL_REV
  FROM ACT
  WHERE
    SG2 IS NOT NULL
    AND CHOOSE = 'Y'),

MIX_D AS ( -- Build Mix Key Date: Business Date: 7 days; Stay Date: 4 months
  SELECT
    *
  FROM (
    SELECT
      DISTINCT DATE BUSINESS_DATE
    FROM `vp-dwh-prod-c827.MAPPING.DATE`
    WHERE
      DATE BETWEEN DATE_SUB (CURRENT_DATE, INTERVAL 7 DAY) AND CURRENT_DATE)
  CROSS JOIN (
    SELECT
      DISTINCT DATE
    FROM `vp-dwh-prod-c827.MAPPING.DATE`)
  WHERE
    DATE BETWEEN "2019-01-01"
    AND DATE_TRUNC(DATE_SUB(current_date(), INTERVAL -7 month),month)-1),


MIX_A_O AS ( -- Buill ALL COLUMNS: A/O,STLY,PU D,W,M
  SELECT -- Actual 
    MD.*,
    SA.RESORT,
    -- SA.MARKET_GROUP,
    SA.ACCOUNT,
    SA.SALE_GROUP,
    SA.SIC,
    SA.RNS,
    SA.TOTAL_REV,
    0 RNS_STLY,
    0 TOTAL_REV_STLY,
    0 RNS_D,
    0 TOTAL_REV_D,
    0 RNS_W,
    0 TOTAL_REV_W,
    0 RNS_M,
    0 TOTAL_REV_M
  FROM MIX_D MD
  LEFT JOIN SIC_A SA
  ON
    SA.BUSINESS_DATE <= MD.BUSINESS_DATE
    AND SA.DATE = MD.DATE
  UNION ALL
  SELECT --On the book 
    MD.*,
    SO.RESORT,
    -- SO.MARKET_GROUP,
    SO.ACCOUNT,
    SO.SALE_GROUP,
    SO.SIC,
    SO.RNS,
    SO.TOTAL_REV,
    0,0,0,0,0,0,0,0
  FROM MIX_D MD
  LEFT JOIN SIC_O SO
  ON
    SO.BUSINESS_DATE = MD.BUSINESS_DATE
    AND SO.DATE = MD.DATE
  UNION ALL
  SELECT -- Actual LY 
    MD.*,
    SA.RESORT,
    -- SA.MARKET_GROUP,
    SA.ACCOUNT,
    SA.SALE_GROUP,
    SA.SIC,
    0,0,
    SA.RNS,
    SA.TOTAL_REV,
    0,0,0,0,0,0
  FROM MIX_D MD
  LEFT JOIN SIC_A SA
  ON
    SA.BUSINESS_DATE <= DATE_SUB (MD.BUSINESS_DATE, INTERVAL 1 YEAR)
    AND SA.DATE = DATE_SUB (MD.DATE, INTERVAL 1 YEAR)
  UNION ALL
  SELECT -- On the book STLY 
    MD.*,
    SO.RESORT,
    -- SO.MARKET_GROUP,
    SO.ACCOUNT,
    SO.SALE_GROUP,
    SO.SIC,
    0,0,
    SO.RNS,
    SO.TOTAL_REV,
    0,0,0,0,0,0
  FROM MIX_D MD
  LEFT JOIN SIC_O SO
  ON
    SO.BUSINESS_DATE = DATE_SUB (MD.BUSINESS_DATE, INTERVAL 1 YEAR)
    AND SO.DATE = DATE_SUB (MD.DATE, INTERVAL 1 YEAR)
  UNION ALL
  SELECT -- Act yesterday FOR PU cal 
    MD.*,
    SA.RESORT,
    -- SA.MARKET_GROUP,
    SA.ACCOUNT,
    SA.SALE_GROUP,
    SA.SIC,
    0,0,0,0,
    SA.RNS,
    SA.TOTAL_REV,
    0,0,0,0
  FROM MIX_D MD
  LEFT JOIN SIC_A SA
  ON
    SA.BUSINESS_DATE < MD.BUSINESS_DATE
    AND SA.DATE = MD.DATE
  UNION ALL
  SELECT -- OTB yesterday FOR PU 
    MD.*,
    SO.RESORT,
    -- SO.MARKET_GROUP,
    SO.ACCOUNT,
    SO.SALE_GROUP,
    SO.SIC,
    0,0,0,0,
    SO.RNS,
    SO.TOTAL_REV,
    0,0,0,0
  FROM MIX_D MD
  LEFT JOIN SIC_O SO
  ON
    SO.BUSINESS_DATE = DATE_SUB (MD.BUSINESS_DATE, INTERVAL 1 DAY)
    AND SO.DATE = MD.DATE
  UNION ALL
  SELECT -- ACT last week FOR PU cal 
    MD.*,
    SA.RESORT,
    -- SA.MARKET_GROUP,
    SA.ACCOUNT,
    SA.SALE_GROUP,
    SA.SIC,
    0,0,0,0,0,0,
    SA.RNS,
    SA.TOTAL_REV,
    0,0
  FROM MIX_D MD
  LEFT JOIN SIC_A SA
  ON
    SA.BUSINESS_DATE <= DATE_SUB (MD.BUSINESS_DATE, INTERVAL 7 DAY)
    AND SA.DATE = MD.DATE
  UNION ALL -- OTB last week FOR PU cal
  SELECT
    MD.*,
    SO.RESORT,
    -- SO.MARKET_GROUP,
    SO.ACCOUNT,
    SO.SALE_GROUP,
    SO.SIC,
    0,0,0,0,0,0,
    SO.RNS,
    SO.TOTAL_REV,
    0,0
  FROM MIX_D MD
  LEFT JOIN SIC_O SO
  ON
    SO.BUSINESS_DATE = DATE_SUB (MD.BUSINESS_DATE, INTERVAL 7 DAY)
    AND SO.DATE = MD.DATE
  UNION ALL
  SELECT -- ACT FOR PU mtd \
    MD.*,
    SA.RESORT,
    -- SA.MARKET_GROUP,
    SA.ACCOUNT,
    SA.SALE_GROUP,
    SA.SIC,
    0,0,0,0,0,0,0,0,
    SA.RNS,
    SA.TOTAL_REV,
  FROM MIX_D MD
  LEFT JOIN SIC_A SA
  ON
    SA.BUSINESS_DATE <= DATE_ADD (LAST_DAY (DATE_SUB (MD.BUSINESS_DATE, INTERVAL 1 MONTH)),INTERVAL 1 DAY)
    AND SA.DATE = MD.DATE
  UNION ALL -- OTB FOR PU mtd
  SELECT
    MD.*,
    SO.RESORT,
    -- SO.MARKET_GROUP,
    SO.ACCOUNT,
    SO.SALE_GROUP,
    SO.SIC,
    0,0,0,0,0,0,0,0,
    SO.RNS,
    SO.TOTAL_REV
  FROM MIX_D MD
  LEFT JOIN SIC_O SO
  ON
    SO.BUSINESS_DATE = DATE_ADD (LAST_DAY (DATE_SUB (MD.BUSINESS_DATE, INTERVAL 1 MONTH)),INTERVAL 1 DAY)
    AND SO.DATE = MD.DATE),


BUDGET AS (
    SELECT
      DISTINCT RESORT_1 RESORT,
      STAY_Y_1 STAY_Y,
      STAY_M_1 STAY_M,
      SELL_Y_1 SELL_Y,
      SELL_M_1 SELL_M,
      ACCOUNT_1 ACCOUNT,
      SALES_GROUP_1 SG,
      SIC_1 SIC,
      SUM (RNS_1) RNS,
      SUM (TREV_MIL_1) TREV
      FROM `vp-dwh-prod-c827.MAPPING.BUDGET_SIC_CTDS`
      GROUP BY 1,2,3,4,5,6,7,8
      UNION ALL
      SELECT
      DISTINCT RESORT_2 RESORT,
      STAY_Y_2 STAY_Y,
      STAY_M_2 STAY_M,
      SELL_Y_2 SELL_Y,
      SELL_M_2 SELL_M,
      ACCOUNT_2 ACCOUNT,
      SALES_GROUP_2 SG,
      SIC_2 SIC,
      SUM (RNS_2) RNS,
      SUM (TREV_MIL_2) TREV
      FROM `vp-dwh-prod-c827.MAPPING.BUDGET_SIC_CTDS`
      GROUP BY 1,2,3,4,5,6,7,8),


ALL_SIC AS (
  SELECT
    DISTINCT BUSINESS_DATE,
    EXTRACT (YEAR FROM DATE) YEAR,
    EXTRACT (MONTH FROM DATE) MONTH,
    RESORT,
    ACCOUNT,
    SALE_GROUP,
    SIC,
    SUM (RNS) RNS,
    SUM (TOTAL_REV) TOTAL_REV,
    SUM (RNS_STLY) RNS_STLY,
    SUM (TOTAL_REV_STLY) TOTAL_REV_STLY,
    (SUM (RNS) - SUM (RNS_D)) PU_RNS_D,
    (SUM (TOTAL_REV) - SUM (TOTAL_REV_D)) PU_TREV_D,
    (SUM (RNS) - SUM (RNS_W)) PU_RNS_W,
    (SUM (TOTAL_REV) - SUM (TOTAL_REV_W)) PU_TREV_W,
    (SUM (RNS) - SUM (RNS_M)) PU_RNS_M,
    (SUM (TOTAL_REV) - SUM (TOTAL_REV_M)) PU_TREV_M,
    0 BG_DT_RNS,
    0 BG_DT_TREV,
    0 BG_DS_RNS,
    0 BG_DS_TREV
  FROM MIX_A_O 
  WHERE
    RESORT IS NOT NULL
  GROUP BY 1,2,3,4,5,6,7
  UNION ALL
    SELECT 
    DISTINCT MD.*,
    BG.RESORT,
    ACCOUNT,
    SG,
    SIC,
    0,0,0,0,0,0,0,0,0,0,
    SUM (RNS) BG_DT_RNS,
    SUM (TREV) BG_DT_TREV,
    0,0
  FROM ( SELECT DISTINCT BUSINESS_DATE,
    EXTRACT (YEAR FROM DATE) YEAR,
    EXTRACT (MONTH FROM DATE) MONTH FROM MIX_D) MD
  LEFT JOIN BUDGET BG
    ON 
      MD.YEAR = STAY_Y
      AND MD.MONTH = STAY_M
    GROUP BY 1,2,3,4,5,6,7
UNION ALL
    SELECT
    DISTINCT MD.*,
    BG.RESORT,
    ACCOUNT,
    SG,
    SIC,
    0,0,0,0,0,0,0,0,0,0,0,0,
    SUM (RNS) BG_DS_RNS,
    SUM (TREV) BG_DS_TREV,
  FROM ( SELECT DISTINCT BUSINESS_DATE,
    EXTRACT (YEAR FROM DATE) YEAR,
    EXTRACT (MONTH FROM DATE) MONTH
    FROM MIX_D) MD
  LEFT JOIN BUDGET BG
    ON 
      EXTRACT (YEAR FROM BUSINESS_DATE) = SELL_Y
      AND EXTRACT (MONTH FROM BUSINESS_DATE) = SELL_M
      AND MD.YEAR = STAY_Y
      AND MD.MONTH = STAY_M
    GROUP BY 1,2,3,4,5,6,7)


,FINAL AS (    
SELECT
  DISTINCT BUSINESS_DATE,
  YEAR,
  MONTH,
  CASE
    WHEN (YEAR < EXTRACT (YEAR FROM BUSINESS_DATE)) OR (YEAR = EXTRACT (YEAR FROM BUSINESS_DATE) AND MONTH < EXTRACT (MONTH FROM BUSINESS_DATE)) THEN 'Last months'
    WHEN (YEAR = EXTRACT (YEAR FROM BUSINESS_DATE) AND MONTH BETWEEN EXTRACT (MONTH FROM BUSINESS_DATE) AND (EXTRACT (MONTH FROM BUSINESS_DATE) + 3)) 
      OR (YEAR - EXTRACT (YEAR FROM BUSINESS_DATE) = 1 AND EXTRACT(MONTH FROM BUSINESS_DATE) - MONTH > 8)  THEN 'Current & next 3 months'
    ELSE 'Next months'
  END TYPE,
  CASE 
    WHEN MONTH <= 9 THEN CONCAT (YEAR,' - 0',MONTH)
    ELSE CONCAT (YEAR,' - ',MONTH)
  END MONTH_TYPE,
  CASE
    WHEN RESORT = "VPDS2NT" THEN "VPLGLRV"
    ELSE RESORT
  END RESORT,
  ACCOUNT,
  SALE_GROUP,
  SIC,
  IFNULL (SUM (RNS),0) RNS,
  IFNULL (SUM (TOTAL_REV),0)/1000000 TREV,
  IFNULL (SUM (RNS_STLY),0) RNS_STLY,
  IFNULL (SUM (TOTAL_REV_STLY),0)/1000000 TREV_STLY,
  IFNULL (SUM (PU_RNS_D),0) PU_RNS_D,
  IFNULL (SUM (PU_TREV_D),0)/1000000 PU_TREV_D,
  IFNULL (SUM (PU_RNS_W),0) PU_RNS_W,
  IFNULL (SUM (PU_TREV_W),0)/1000000 PU_TREV_W,
  IFNULL (SUM (PU_RNS_M),0) PU_RNS_M,
  IFNULL (SUM (PU_TREV_M),0)/1000000 PU_TREV_M,
  IFNULL (SUM (BG_DT_RNS),0) BG_DT_RNS,
  IFNULL (SUM (BG_DT_TREV),0) BG_DT_TREV,
  IFNULL (SUM (BG_DS_RNS),0) BG_DS_RNS,
  IFNULL (SUM (BG_DS_TREV),0) BG_DS_TREV,
  SAFE_DIVIDE (SUM (BG_DS_RNS),EXTRACT (DAY FROM LAST_DAY(BUSINESS_DATE))) DS_RNS_D,
  SAFE_DIVIDE (SUM (BG_DS_TREV),EXTRACT (DAY FROM LAST_DAY(BUSINESS_DATE))) DS_TREV_D,
  SAFE_DIVIDE (SUM (BG_DT_RNS),DATE_DIFF (LAST_DAY (DATE(YEAR,MONTH,1)),BUSINESS_DATE,DAY)) REQUIRE_RNS,
  SAFE_DIVIDE (SUM (BG_DT_TREV),DATE_DIFF (LAST_DAY (DATE(YEAR,MONTH,1)),BUSINESS_DATE,DAY)) REQUIRE_TREV,
FROM
  ALL_SIC
WHERE RESORT IN (SELECT DISTINCT PROPERTY_CODE FROM `vp-dwh-prod-c827.MAPPING.PROPERTY` 
  WHERE PKD IN ("Phòng Kinh doanh 1", "Phòng Kinh doanh 2"))
AND YEAR >= 2024
GROUP BY 1,2,3,4,5,6,7,8,9)

,final1 as (
select business_date, month_type,account channels, trev total_rev, bg_dt_trev budget,resort, full_name property_name, sale_group, sic, year, month from final
left join
(SELECT DISTINCT
 PROPERTY_CODE ,
 REGION,
 BRAND,
 FULL_NAME,
 SHORT_NAME, NEW_REGION, PKD
FROM `vp-dwh-prod-c827.MAPPING.PROPERTY`
WHERE PROPERTY_CODE != "VPDS2NT") pro on final.resort = pro.property_code
--order by business_date asc
where year >= 2024)

select * , 
       case when property_name like '%Nha Trang%' then 'Nha Trang'
            when property_name like '%Đà Nẵng%'  then 'Đà Nẵng'
            when property_name like '%Hội An%' then 'Hội An'
            when property_name like '%Hạ Long%' then 'Hạ Long'
            when property_name like '%Phú Quốc%' then 'Phú Quốc'
            when property_name = 'StayNFun Ocean Park 2' then 'Hà Nội'
            end as destination

from final1
--where year = 2023 and month = 3 and sale_group like '%E-COM%'